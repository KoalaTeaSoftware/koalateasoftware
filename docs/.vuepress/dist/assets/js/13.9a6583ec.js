(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{371:function(t,e,a){"use strict";a.r(e);var o=a(45),s=Object(o.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),a("p",[t._v("This website is going to do a few things for me. I have already tried basing a website on WordPress, and PHP, using WP as simply a CMS and found that the result offers 2 big obstacles to customer satisfaction:")]),t._v(" "),a("ol",[a("li",[t._v("You end up spending many hours trying to get something approaching the look that you want")]),t._v(" "),a("li",[t._v("You get an embarrassingly slow website. I suspect bloat, the legacy-software-problem, and the fact that my hosting supplier want me to pay for 'better' hosting.")])]),t._v(" "),a("p",[t._v("I could get good at selecting, manipulating & writing WP customisation and plugins, I suppose, but to what end? I would still probably have to pay for faster hosting, and I would not be able to compete selling these skills.")]),t._v(" "),a("p",[t._v("I discovered Vue.JS recently, and, even more recently, VuePress, and I really like them. They hide away a lot of the clunks that I hve found that I need to wade through using PHP, and they will serve pages rapidly.")]),t._v(" "),a("p",[t._v("For various reasons, I have "),a("strong",[t._v("Gone Over To The Dark Side")]),t._v(" with this site. I have decided to host the site on Google's Firebase. You get very simple server-side stuff (although they are trying to sell it as 'no server'), so that is a big plus. For the time being, you get speed.")]),t._v(" "),a("h2",{attrs:{id:"road-map-to-do"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#road-map-to-do"}},[t._v("#")]),t._v(" Road Map (To Do)")]),t._v(" "),a("ul",[a("li",[t._v("[ ] make the category filter use some kind of "),a("em",[t._v("contains")]),t._v(", rather than "),a("em",[t._v("===")])]),t._v(" "),a("li",[t._v("[ ] use Firebase storage as the location of the blog articles. Currently, it is necessary to build and deploy when an article is written. It will mean\n"),a("ul",[a("li",[t._v("Writing a Vue object (the appropriate properties) to capture an article")]),t._v(" "),a("li",[t._v("Make the article listing component look into the Firebase storage, rather then the deployed list of files.")]),t._v(" "),a("li",[t._v("Think about how this affects (probably breaks) the search in the navbar")])])])]),t._v(" "),a("h2",{attrs:{id:"current-state"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#current-state"}},[t._v("#")]),t._v(" Current State")]),t._v(" "),a("ul",[a("li",[t._v('It can produce categorised lists of blogs. This uses a Posts.vue component has a property called "category".\n'),a("ul",[a("li",[t._v("Currently, I have them placed in different folders, but the component gets a list of "),a("em",[t._v("all")]),t._v(" of the files.")]),t._v(" "),a("li",[t._v("The FrontMatter type attribute is "),a("em",[t._v("the key")])]),t._v(" "),a("li",[t._v("You can add attributes to the FrontMatter, this is what I did to add some simple categorisation")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);